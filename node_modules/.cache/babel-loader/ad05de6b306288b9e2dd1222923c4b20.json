{"ast":null,"code":"\"use strict\";\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar BubbleGroup_1 = require(\"../BubbleGroup\");\n\nvar ChatBubble_1 = require(\"../ChatBubble\");\n\nvar ChatInput_1 = require(\"../ChatInput\");\n\nvar Message_1 = require(\"../Message\");\n\nvar styles_1 = require(\"./styles\");\n\nvar ChatFeed = function (_React$Component) {\n  _inherits(ChatFeed, _React$Component);\n\n  function ChatFeed(props) {\n    _classCallCheck(this, ChatFeed);\n\n    return _possibleConstructorReturn(this, (ChatFeed.__proto__ || Object.getPrototypeOf(ChatFeed)).call(this, props));\n  }\n\n  _createClass(ChatFeed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      var scrollHeight = this.chat.scrollHeight;\n      var height = this.chat.clientHeight;\n      var maxScrollTop = scrollHeight - height;\n      this.chat.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n    }\n  }, {\n    key: \"renderMessages\",\n    value: function renderMessages(messages) {\n      var _props = this.props,\n          isTyping = _props.isTyping,\n          bubbleStyles = _props.bubbleStyles,\n          chatBubble = _props.chatBubble,\n          showSenderName = _props.showSenderName;\n      var ChatBubble = chatBubble || ChatBubble_1.default;\n      var group = [];\n      var messageNodes = messages.map(function (message, index) {\n        group.push(message);\n\n        if (!messages[index + 1] || messages[index + 1].id !== message.id) {\n          var messageGroup = group;\n          group = [];\n          return React.createElement(BubbleGroup_1.default, {\n            key: index,\n            messages: messageGroup,\n            id: message.id,\n            showSenderName: showSenderName,\n            chatBubble: ChatBubble,\n            bubbleStyles: bubbleStyles\n          });\n        }\n\n        return null;\n      });\n\n      if (isTyping) {\n        messageNodes.push(React.createElement(\"div\", {\n          key: \"isTyping\",\n          style: Object.assign({}, styles_1.default.chatbubbleWrapper)\n        }, React.createElement(ChatBubble, {\n          message: new Message_1.default({\n            id: 1,\n            message: '...',\n            senderName: ''\n          }),\n          bubbleStyles: bubbleStyles\n        })));\n      }\n\n      return messageNodes;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var inputField = this.props.hasInputField && React.createElement(ChatInput_1.default, null);\n      var maxHeight = this.props.maxHeight;\n      return React.createElement(\"div\", {\n        id: \"chat-panel\",\n        style: styles_1.default.chatPanel\n      }, React.createElement(\"div\", {\n        ref: function ref(c) {\n          _this2.chat = c;\n        },\n        className: \"chat-history\",\n        style: Object.assign({}, styles_1.default.chatHistory, {\n          maxHeight: maxHeight\n        })\n      }, React.createElement(\"div\", {\n        className: \"chat-messages\"\n      }, this.renderMessages(this.props.messages))), inputField);\n    }\n  }]);\n\n  return ChatFeed;\n}(React.Component);\n\nexports.default = ChatFeed;","map":null,"metadata":{},"sourceType":"script"}