{"ast":null,"code":"import _classCallCheck from \"/Users/yj/avo_market/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport auth0 from 'auth0-js';\nimport history from './history'; //need to fix redirectUri error\n\nvar Auth = function Auth() {\n  var _this = this;\n\n  _classCallCheck(this, Auth);\n\n  this.auth0 = new auth0.WebAuth({\n    domain: 'petieer.auth0.com',\n    clientID: 'blyOn45DgxXobYjsna02coskMXDXkL-t',\n    redirectUri: 'http://localhost:3000/callback',\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  this.login = function () {\n    _this.auth0.authorize();\n  };\n\n  this.handleAuthentication = function () {\n    _this.auth0.parseHash(function (err, authResult) {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        _this.setSession(authResult);\n\n        history.replace('/home');\n      } else if (err) {\n        history.replace('/home');\n        console.log(err);\n      }\n    });\n  };\n\n  this.setSession = function (authResult) {\n    var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    history.replace('/home');\n  };\n\n  this.logout = function () {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    history.replace('/home');\n  };\n\n  this.isAuthenticated = function () {\n    var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  };\n};\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/yj/avo_market/src/components/auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","replace","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;IACqBC,I;;;;;OACnBF,K,GAAQ,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACxBC,IAAAA,MAAM,EAAE,mBADgB;AAExBC,IAAAA,QAAQ,EAAE,kCAFc;AAGxBC,IAAAA,WAAW,EAAE,gCAHW;AAIxBC,IAAAA,YAAY,EAAE,gBAJU;AAKxBC,IAAAA,KAAK,EAAE;AALiB,GAAlB,C;;OAQRC,K,GAAQ,YAAM;AACZ,IAAA,KAAI,CAACT,KAAL,CAAWU,SAAX;AACD,G;;OAEDC,oB,GAAuB,YAAM;AAC3B,IAAA,KAAI,CAACX,KAAL,CAAWY,SAAX,CAAqB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACxC,UAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAAgE;AAC9D,QAAA,KAAI,CAACC,UAAL,CAAgBH,UAAhB;;AACAb,QAAAA,OAAO,CAACiB,OAAR,CAAgB,OAAhB;AACD,OAHD,MAGO,IAAIL,GAAJ,EAAS;AACdZ,QAAAA,OAAO,CAACiB,OAAR,CAAgB,OAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACD;AACF,KARD;AASD,G;;OAEDI,U,GAAa,UAACH,UAAD,EAAgB;AAC3B,QAAIO,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBT,UAAU,CAACU,SAAX,GAAuB,IAAxB,GAAgC,IAAIC,IAAJ,GAAWC,OAAX,EAA/C,CAAhB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCd,UAAU,CAACC,WAAhD;AACAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCd,UAAU,CAACE,OAA5C;AACAW,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC;AACApB,IAAAA,OAAO,CAACiB,OAAR,CAAgB,OAAhB;AACD,G;;OAEDW,M,GAAS,YAAM;AACbF,IAAAA,YAAY,CAACG,UAAb,CAAwB,cAAxB;AACAH,IAAAA,YAAY,CAACG,UAAb,CAAwB,UAAxB;AACAH,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACA7B,IAAAA,OAAO,CAACiB,OAAR,CAAgB,OAAhB;AACD,G;;OAEDa,e,GAAkB,YAAM;AACtB,QAAIV,SAAS,GAAGC,IAAI,CAACU,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,YAArB,CAAX,CAAhB;AACA,WAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD,G;;;SA3CkBnB,I","sourcesContent":["import auth0 from 'auth0-js';\n\nimport history from './history';\n\n//need to fix redirectUri error\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: 'petieer.auth0.com',\n    clientID: 'blyOn45DgxXobYjsna02coskMXDXkL-t',\n    redirectUri: 'http://localhost:3000/callback',\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  login = () => {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        history.replace('/home');\n      } else if (err) {\n        history.replace('/home');\n        console.log(err);\n      }\n    });\n  }\n\n  setSession = (authResult) => {\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    history.replace('/home');\n  }\n\n  logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    history.replace('/home');\n  }\n\n  isAuthenticated = () => {\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n}"]},"metadata":{},"sourceType":"module"}