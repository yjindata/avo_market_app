{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _actions = require('@appbaseio/reactivecore/lib/actions');\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _helper = require('@appbaseio/reactivecore/lib/utils/helper');\n\nvar _types = require('@appbaseio/reactivecore/lib/utils/types');\n\nvar _types2 = _interopRequireDefault(_types);\n\nvar _Title = require('../../styles/Title');\n\nvar _Title2 = _interopRequireDefault(_Title);\n\nvar _Button = require('../../styles/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Flex = require('../../styles/Flex');\n\nvar _Flex2 = _interopRequireDefault(_Flex);\n\nvar _Container = require('../../styles/Container');\n\nvar _Container2 = _interopRequireDefault(_Container);\n\nvar _utils = require('../../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar NumberBox = function (_Component) {\n  _inherits(NumberBox, _Component);\n\n  function NumberBox(props) {\n    _classCallCheck(this, NumberBox);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.type = 'term';\n    var currentValue = props.selectedValue || props.defaultValue || props.value || props.data.start;\n    _this.state = {\n      currentValue: currentValue\n    };\n    _this.locked = false;\n    props.addComponent(props.componentId);\n    props.setQueryListener(props.componentId, props.onQueryChange, null);\n\n    _this.setReact(props);\n\n    var hasMounted = false;\n\n    if (currentValue) {\n      _this.setValue(currentValue, _this.props, hasMounted);\n    }\n\n    return _this;\n  }\n\n  NumberBox.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    (0, _helper.checkPropChange)(this.props.react, prevProps.react, function () {\n      _this2.setReact(_this2.props);\n    });\n    (0, _helper.checkPropChange)(this.props.value, prevProps.value, function () {\n      _this2.setValue(_this2.props.value, _this2.props);\n    });\n    (0, _helper.checkPropChange)(this.props.queryFormat, this.props.queryFormat, function () {\n      _this2.updateQuery(_this2.state.currentValue, _this2.props);\n    });\n    (0, _helper.checkSomePropChange)(this.props, prevProps, ['dataField', 'nestedField'], function () {\n      _this2.updateQuery(_this2.state.currentValue, _this2.props);\n    });\n  };\n\n  NumberBox.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.props.removeComponent(this.props.componentId);\n  };\n\n  NumberBox.prototype.setReact = function setReact(props) {\n    if (props.react) {\n      props.watchComponent(props.componentId, props.react);\n    }\n  };\n\n  NumberBox.prototype.render = function render() {\n    return _react2.default.createElement(_Container2.default, {\n      style: this.props.style,\n      className: this.props.className\n    }, this.props.title && _react2.default.createElement(_Title2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'title') || null\n    }, this.props.title), _react2.default.createElement(_Flex2.default, {\n      labelPosition: this.props.labelPosition,\n      justifyContent: 'space-between',\n      className: _Button.numberBoxContainer\n    }, _react2.default.createElement('span', {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'label') || null\n    }, this.props.data.label), _react2.default.createElement('div', null, _react2.default.createElement(_Button2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'button') || null,\n      onClick: this.decrementValue,\n      disabled: this.state.currentValue === this.props.data.start\n    }, _react2.default.createElement('b', null, '-')), this.state.currentValue, _react2.default.createElement(_Button2.default, {\n      className: (0, _helper.getClassName)(this.props.innerClass, 'button') || null,\n      onClick: this.incrementValue,\n      disabled: this.state.currentValue === this.props.data.end\n    }, _react2.default.createElement('b', null, '+')))));\n  };\n\n  return NumberBox;\n}(_react.Component);\n\nNumberBox.defaultQuery = function (value, props) {\n  var _term, _range, _range2;\n\n  var query = null;\n\n  switch (props.queryFormat) {\n    case 'exact':\n      query = {\n        term: (_term = {}, _term[props.dataField] = value, _term)\n      };\n      break;\n\n    case 'lte':\n      query = {\n        range: (_range = {}, _range[props.dataField] = {\n          lte: value,\n          boost: 2.0\n        }, _range)\n      };\n      break;\n\n    default:\n      query = {\n        range: (_range2 = {}, _range2[props.dataField] = {\n          gte: value,\n          boost: 2.0\n        }, _range2)\n      };\n  }\n\n  if (query && props.nestedField) {\n    return {\n      query: {\n        nested: {\n          path: props.nestedField,\n          query: query\n        }\n      }\n    };\n  }\n\n  return query;\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.incrementValue = function () {\n    if (_this3.state.currentValue === _this3.props.data.end) {\n      return;\n    }\n\n    var currentValue = _this3.state.currentValue;\n    var _props = _this3.props,\n        value = _props.value,\n        onChange = _props.onChange;\n\n    if (value === undefined) {\n      _this3.setValue(currentValue + 1);\n    } else if (onChange) {\n      onChange(currentValue + 1);\n    }\n  };\n\n  this.decrementValue = function () {\n    if (_this3.state.currentValue === _this3.props.data.start) {\n      return;\n    }\n\n    var currentValue = _this3.state.currentValue;\n    var _props2 = _this3.props,\n        value = _props2.value,\n        onChange = _props2.onChange;\n\n    if (value === undefined) {\n      _this3.setValue(currentValue - 1);\n    } else if (onChange) {\n      onChange(currentValue - 1);\n    }\n  };\n\n  this.setValue = function (value) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this3.props;\n    var hasMounted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; // ignore state updates when component is locked\n\n    if (props.beforeValueChange && _this3.locked) {\n      return;\n    }\n\n    _this3.locked = true;\n\n    var performUpdate = function performUpdate() {\n      var handleUpdates = function handleUpdates() {\n        _this3.updateQuery(value, props);\n\n        _this3.locked = false;\n        if (props.onValueChange) props.onValueChange(value);\n      };\n\n      if (hasMounted) {\n        _this3.setState({\n          currentValue: value\n        }, handleUpdates);\n      } else {\n        handleUpdates();\n      }\n    };\n\n    (0, _helper.checkValueChange)(props.componentId, value, props.beforeValueChange, performUpdate);\n  };\n\n  this.updateQuery = function (value, props) {\n    var customQuery = props.customQuery;\n    var query = NumberBox.defaultQuery(value, props);\n    var customQueryOptions = void 0;\n\n    if (customQuery) {\n      var _ref = customQuery(value, props) || {};\n\n      query = _ref.query;\n      customQueryOptions = (0, _helper.getOptionsFromQuery)(customQuery(value, props));\n    }\n\n    props.setQueryOptions(props.componentId, customQueryOptions);\n    props.updateQuery({\n      componentId: props.componentId,\n      query: query,\n      value: value,\n      showFilter: false,\n      // we don't need filters for NumberBox\n      URLParams: props.URLParams,\n      componentType: 'NUMBERBOX'\n    });\n  };\n};\n\nNumberBox.propTypes = {\n  addComponent: _types2.default.funcRequired,\n  removeComponent: _types2.default.funcRequired,\n  setQueryListener: _types2.default.funcRequired,\n  updateQuery: _types2.default.funcRequired,\n  watchComponent: _types2.default.funcRequired,\n  selectedValue: _types2.default.selectedValue,\n  setQueryOptions: _types2.default.funcRequired,\n  // component props\n  className: _types2.default.string,\n  componentId: _types2.default.stringRequired,\n  data: _types2.default.dataNumberBox,\n  dataField: _types2.default.stringRequired,\n  defaultValue: _types2.default.number,\n  value: _types2.default.number,\n  innerClass: _types2.default.style,\n  nestedField: _types2.default.string,\n  labelPosition: _types2.default.labelPosition,\n  onQueryChange: _types2.default.func,\n  onValueChange: _types2.default.func,\n  onChange: _types2.default.func,\n  queryFormat: _types2.default.queryFormatNumberBox,\n  react: _types2.default.react,\n  style: _types2.default.style,\n  title: _types2.default.title,\n  URLParams: _types2.default.bool\n};\nNumberBox.defaultProps = {\n  className: null,\n  labelPosition: 'left',\n  queryFormat: 'gte',\n  style: {},\n  URLParams: false\n};\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    selectedValue: state.selectedValues[props.componentId] ? state.selectedValues[props.componentId].value : null\n  };\n};\n\nvar mapDispatchtoProps = function mapDispatchtoProps(dispatch) {\n  return {\n    addComponent: function addComponent(component) {\n      return dispatch((0, _actions.addComponent)(component));\n    },\n    removeComponent: function removeComponent(component) {\n      return dispatch((0, _actions.removeComponent)(component));\n    },\n    updateQuery: function updateQuery(updateQueryObject) {\n      return dispatch((0, _actions.updateQuery)(updateQueryObject));\n    },\n    watchComponent: function watchComponent(component, react) {\n      return dispatch((0, _actions.watchComponent)(component, react));\n    },\n    setQueryListener: function setQueryListener(component, onQueryChange, beforeQueryChange) {\n      return dispatch((0, _actions.setQueryListener)(component, onQueryChange, beforeQueryChange));\n    },\n    setQueryOptions: function setQueryOptions(component, props, execute) {\n      return dispatch((0, _actions.setQueryOptions)(component, props, execute));\n    }\n  };\n};\n\nvar ConnectedComponent = (0, _utils.connect)(mapStateToProps, mapDispatchtoProps)(function (props) {\n  return _react2.default.createElement(NumberBox, _extends({\n    ref: props.myForwardedRef\n  }, props));\n}); // eslint-disable-next-line\n\nvar ForwardRefComponent = _react2.default.forwardRef(function (props, ref) {\n  return _react2.default.createElement(ConnectedComponent, _extends({}, props, {\n    myForwardedRef: ref\n  }));\n});\n\n(0, _hoistNonReactStatics2.default)(ForwardRefComponent, NumberBox);\nForwardRefComponent.name = 'NumberBox';\nexports.default = ForwardRefComponent;","map":null,"metadata":{},"sourceType":"script"}