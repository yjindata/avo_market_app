#!/usr/bin/env node
/* 
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
*/
"use strict";
const program = require('commander')
const chalk = require('chalk')

const featureCommand = require('./feature-command.js')
const mobileFeatures = require('../lib/aws-operations/mobile-features.js')

console.log()
process.on('exit', function () {
  console.log()
})

program.on('--help', function () {
  featureCommand.list()
})

program
  .version(require('../package').version)
  .description('awsmobile cli enables easy incorporation of aws features into your project')
  .usage('<command> [options]')
  .command('start', 'start an awsmobilejs project using one of our starter templates')
  .command('init', 'initialize the current project with awsmobile features')
  .command('pull', 'pull the latest details of the awsmobile project from the cloud')
  .command('push', 'push the local development of the awsmobile project to the cloud')
  .command('delete', 'delete the awsmobile project in the cloud')
  .command('publish', 'execute push and then publish the frontend to S3 hosting bucket')
  .command('run', 'execute push and then start the frontend locally')
  .command('console', 'open the web console of the backend awsmobile project')
  .command('configure', 'edit configuration settings of the aws account or the project')  
  .command('features', 'enable/disable the awsmobile project features locally')
  .command('<feature>', 'contains subcommands of the specified awsmobile feature')
  .parse(process.argv)

if(!program.runningCommand){
  if(program.args.length > 0){
    let featureName = program.args[0]
    if(mobileFeatures.includes(featureName)){
      featureCommand.run(featureName, process.argv)
    }else{
      program.help()
    }
  }
}
